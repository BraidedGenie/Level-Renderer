// "ModularColumn_middle.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "ModularColumn_middle.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _ModularColumn_middle_version_
const char ModularColumn_middle_version[4] = { '0','1','9','d' };
#define _ModularColumn_middle_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _ModularColumn_middle_vertexcount_
const unsigned ModularColumn_middle_vertexcount = 200;
#define _ModularColumn_middle_vertexcount_
#endif
#ifndef _ModularColumn_middle_indexcount_
const unsigned ModularColumn_middle_indexcount = 324;
#define _ModularColumn_middle_indexcount_
#endif
#ifndef _ModularColumn_middle_materialcount_
const unsigned ModularColumn_middle_materialcount = 2; // can be used for batched draws
#define _ModularColumn_middle_materialcount_
#endif
#ifndef _ModularColumn_middle_meshcount_
const unsigned ModularColumn_middle_meshcount = 2;
#define _ModularColumn_middle_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _ModularColumn_middle_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT ModularColumn_middle_vertices[200] =
{
	{	{ -0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, 0.910700f }	},
	{	{ -0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, 0.910700f }	},
	{	{ -0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, 0.910700f }	},
	{	{ -0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, 0.910700f }	},
	{	{ 0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, -0.910700f }	},
	{	{ 0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, -0.910700f }	},
	{	{ 0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, -0.910700f }	},
	{	{ 0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, -0.910700f }	},
	{	{ -0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, 0.910700f }	},
	{	{ -0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, 0.910700f }	},
	{	{ -0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, 0.910700f }	},
	{	{ -0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, 0.910700f }	},
	{	{ -0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, -0.910700f }	},
	{	{ -0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, -0.910700f }	},
	{	{ -0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, -0.910700f }	},
	{	{ -0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013100f, -0.412900f, -0.910700f }	},
	{	{ 0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, 0.910700f }	},
	{	{ 0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, 0.910700f }	},
	{	{ 0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, 0.910700f }	},
	{	{ 0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013100f, -0.412900f, 0.910700f }	},
	{	{ -0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, -0.910700f }	},
	{	{ -0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, -0.910700f }	},
	{	{ -0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, -0.910700f }	},
	{	{ -0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017000f, 0.412700f, -0.910700f }	},
	{	{ -0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, -0.999800f }	},
	{	{ 0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, -0.999800f }	},
	{	{ 0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, -0.999800f }	},
	{	{ 0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, -0.999800f }	},
	{	{ 0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, 0.910700f }	},
	{	{ 0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, 0.910700f }	},
	{	{ 0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, 0.910700f }	},
	{	{ 0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, 0.910700f }	},
	{	{ -0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, 0.358300f }	},
	{	{ 0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, 0.358300f }	},
	{	{ 0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, 0.358300f }	},
	{	{ -0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, 0.358300f }	},
	{	{ -0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, 0.436200f }	},
	{	{ 0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, 0.436200f }	},
	{	{ 0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, 0.436200f }	},
	{	{ -0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, 0.436200f }	},
	{	{ 0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, -0.436200f }	},
	{	{ -0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, -0.436200f }	},
	{	{ -0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, -0.436200f }	},
	{	{ 0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.899900f, -0.436200f }	},
	{	{ 0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, -0.358300f }	},
	{	{ -0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, -0.358300f }	},
	{	{ -0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, -0.358300f }	},
	{	{ 0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933600f, -0.358300f }	},
	{	{ 0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, -0.910700f }	},
	{	{ 0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, -0.910700f }	},
	{	{ 0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, -0.910700f }	},
	{	{ 0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017000f, 0.412700f, -0.910700f }	},
	{	{ 0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, -0.999800f }	},
	{	{ -0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, -0.999800f }	},
	{	{ -0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, -0.999800f }	},
	{	{ -0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, -0.999800f }	},
	{	{ -0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, -0.000000f }	},
	{	{ -0.386218f, 0.031619f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, -0.000000f }	},
	{	{ -0.455395f, 0.102660f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, -0.000000f }	},
	{	{ -0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, -0.000000f }	},
	{	{ 0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.386218f, 0.031619f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.455395f, 0.102660f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.455395f, 0.478932f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.455395f, 0.102660f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ 0.455395f, 0.478932f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ 0.386218f, 0.550312f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ 0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ -0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ -0.455395f, 0.478932f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ -0.386218f, 0.550312f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ -0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ 0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455395f, 0.478932f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455395f, 0.102660f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.386218f, 0.550312f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.386218f, 0.550312f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.386218f, 0.031619f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.031619f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.386218f, 0.031619f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.455394f, 0.102660f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.455394f, 0.478932f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ 0.386218f, 0.550312f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ -0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, -0.000000f }	},
	{	{ -0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, -0.000000f }	},
	{	{ -0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ -0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ 0.455394f, 0.478932f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455394f, 0.102660f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.386218f, 0.550312f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.031619f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.351107f, 0.031990f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.031990f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.351107f, 0.550605f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, 0.550605f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ 0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ 0.351107f, 0.550605f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ -0.351107f, 0.550605f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ 0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ 0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ 0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ -0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ -0.351107f, 0.550605f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ 0.351107f, 0.550605f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ -0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.031990f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ -0.351107f, 0.031990f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ -0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ 0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ 0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, 0.031990f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.351107f, 0.031990f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ 0.351107f, 0.031990f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ 0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ -0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ -0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ -0.351107f, 0.031990f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ -0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ -0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ 0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.031990f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.351107f, 0.031990f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.550605f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.478103f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.478103f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, 0.550605f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, 0.550605f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, 0.031990f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ -0.351107f, 0.031990f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ -0.413995f, 0.103536f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ -0.413995f, 0.103536f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, -0.000000f }	},
	{	{ 0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ 0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ 0.351107f, 0.550605f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, 0.000000f }	},
	{	{ -0.413995f, 0.478103f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.478103f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.031990f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, 0.031990f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.413995f, 0.103536f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.413995f, 0.103536f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
};
#define _ModularColumn_middle_vertices_
#endif
#ifndef _ModularColumn_middle_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int ModularColumn_middle_indices[324] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 16, 18,
	 20, 21, 22,
	 23, 20, 22,
	 24, 25, 26,
	 27, 24, 26,
	 28, 29, 30,
	 31, 28, 30,
	 32, 33, 34,
	 35, 32, 34,
	 36, 37, 38,
	 39, 36, 38,
	 40, 41, 42,
	 43, 40, 42,
	 44, 45, 46,
	 47, 44, 46,
	 48, 49, 50,
	 51, 48, 50,
	 52, 53, 54,
	 55, 52, 54,
	 56, 57, 58,
	 59, 56, 58,
	 60, 61, 62,
	 63, 60, 62,
	 64, 65, 66,
	 67, 64, 66,
	 68, 69, 70,
	 71, 68, 70,
	 72, 73, 74,
	 75, 72, 74,
	 76, 77, 78,
	 79, 76, 78,
	 80, 81, 82,
	 83, 80, 82,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 94,
	 95, 92, 94,
	 69, 96, 97,
	 70, 69, 97,
	 73, 98, 99,
	 74, 73, 99,
	 77, 100, 101,
	 78, 77, 101,
	 65, 102, 103,
	 66, 65, 103,
	 81, 104, 105,
	 82, 81, 105,
	 85, 106, 107,
	 86, 85, 107,
	 89, 108, 109,
	 90, 89, 109,
	 110, 111, 93,
	 92, 110, 93,
	 112, 113, 114,
	 115, 112, 114,
	 116, 117, 118,
	 119, 116, 118,
	 120, 121, 122,
	 123, 120, 122,
	 124, 125, 126,
	 127, 124, 126,
	 128, 129, 130,
	 131, 128, 130,
	 132, 133, 134,
	 135, 132, 134,
	 136, 137, 138,
	 139, 136, 138,
	 140, 141, 142,
	 143, 140, 142,
	 144, 145, 146,
	 147, 144, 146,
	 148, 149, 150,
	 151, 148, 150,
	 152, 153, 154,
	 155, 152, 154,
	 156, 157, 158,
	 159, 156, 158,
	 160, 161, 162,
	 163, 160, 162,
	 164, 165, 166,
	 167, 164, 166,
	 168, 169, 170,
	 171, 168, 170,
	 172, 173, 174,
	 175, 172, 174,
	 176, 177, 178,
	 179, 176, 178,
	 180, 181, 182,
	 183, 180, 182,
	 184, 185, 186,
	 187, 184, 186,
	 188, 189, 190,
	 191, 188, 190,
	 192, 193, 194,
	 195, 192, 194,
	 196, 197, 198,
	 199, 196, 198,
};
#define _ModularColumn_middle_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _ModularColumn_middle_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL ModularColumn_middle_materials[2] =
{
	{
		{{ 0.287072f, 0.287072f, 0.287072f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.510617f, 0.510617f, 0.510617f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"RockLight",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _ModularColumn_middle_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _ModularColumn_middle_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int ModularColumn_middle_batches[2][2] =
{
	{ 192, 0 },
	{ 132, 192 },
};
#define _ModularColumn_middle_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _ModularColumn_middle_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH ModularColumn_middle_meshes[2] =
{
	{
		"default",
		192,
		0,
		0,
	},
	{
		"default",
		132,
		192,
		1,
	},
};
#define _ModularColumn_middle_meshes_
#endif
