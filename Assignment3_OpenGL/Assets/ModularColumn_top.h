// "ModularColumn_top.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "ModularColumn_top.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _ModularColumn_top_version_
const char ModularColumn_top_version[4] = { '0','1','9','d' };
#define _ModularColumn_top_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _ModularColumn_top_vertexcount_
const unsigned ModularColumn_top_vertexcount = 178;
#define _ModularColumn_top_vertexcount_
#endif
#ifndef _ModularColumn_top_indexcount_
const unsigned ModularColumn_top_indexcount = 276;
#define _ModularColumn_top_indexcount_
#endif
#ifndef _ModularColumn_top_materialcount_
const unsigned ModularColumn_top_materialcount = 2; // can be used for batched draws
#define _ModularColumn_top_materialcount_
#endif
#ifndef _ModularColumn_top_meshcount_
const unsigned ModularColumn_top_meshcount = 2;
#define _ModularColumn_top_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _ModularColumn_top_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT ModularColumn_top_vertices[178] =
{
	{	{ 0.455183f, 0.117114f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.455183f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.117114f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007500f, 1.000000f, -0.000000f }	},
	{	{ -0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007500f, 1.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007500f, 1.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007500f, 1.000000f, -0.000000f }	},
	{	{ 0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, 0.010300f }	},
	{	{ -0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, 0.010300f }	},
	{	{ -0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, 0.010300f }	},
	{	{ 0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, 0.010300f }	},
	{	{ -0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, -0.010300f }	},
	{	{ 0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, -0.010300f }	},
	{	{ 0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, -0.010300f }	},
	{	{ -0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, -0.010300f }	},
	{	{ 0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, -0.000900f }	},
	{	{ 0.455183f, 0.117114f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, -0.000900f }	},
	{	{ 0.413995f, 0.117114f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, -0.000900f }	},
	{	{ 0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, -0.000900f }	},
	{	{ 0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000600f, 0.000000f }	},
	{	{ 0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000600f, 0.000000f }	},
	{	{ 0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000600f, 0.000000f }	},
	{	{ 0.455183f, 0.117114f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000600f, 0.000000f }	},
	{	{ 0.455183f, 0.117114f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000600f, 0.000000f }	},
	{	{ 0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000600f, 0.000000f }	},
	{	{ 0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.007500f }	},
	{	{ -0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.007500f }	},
	{	{ -0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.007500f }	},
	{	{ 0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.007500f }	},
	{	{ 0.455183f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455183f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455183f, 0.117114f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455183f, 0.117114f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.392296f, -0.007653f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.455183f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.455183f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.392296f, -0.007653f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.010300f, -0.999900f, 0.000000f }	},
	{	{ -0.455395f, 0.117541f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.010300f, -0.999900f, 0.000000f }	},
	{	{ -0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.010300f, -0.999900f, 0.000000f }	},
	{	{ -0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.010300f, -0.999900f, 0.000000f }	},
	{	{ 0.392296f, -0.007653f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, 0.917400f }	},
	{	{ 0.455183f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, 0.917400f }	},
	{	{ 0.413995f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, 0.917400f }	},
	{	{ 0.351107f, -0.007653f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, 0.917400f }	},
	{	{ 0.455183f, 0.117114f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, 0.000900f }	},
	{	{ 0.455395f, 0.117541f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, 0.000900f }	},
	{	{ 0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, 0.000900f }	},
	{	{ 0.413995f, 0.117114f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004700f, -1.000000f, 0.000900f }	},
	{	{ 0.392296f, -0.007653f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.392296f, -0.007653f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.007500f }	},
	{	{ 0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.007500f }	},
	{	{ 0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.007500f }	},
	{	{ -0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.007500f }	},
	{	{ 0.455395f, 0.374396f, 0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007500f, 1.000000f, -0.000000f }	},
	{	{ 0.455395f, 0.374396f, -0.455395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007500f, 1.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007500f, 1.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007500f, 1.000000f, -0.000000f }	},
	{	{ 0.455183f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, -0.917400f }	},
	{	{ 0.392296f, -0.007653f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, -0.917400f }	},
	{	{ 0.351107f, -0.007653f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, -0.917400f }	},
	{	{ 0.413995f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.397900f, -0.917400f }	},
	{	{ 0.455183f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.455183f, 0.117114f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.117114f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.507267f, 0.609156f, -0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, -0.987900f }	},
	{	{ 0.507267f, 0.609156f, -0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, -0.987900f }	},
	{	{ 0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, -0.987900f }	},
	{	{ -0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, -0.987900f }	},
	{	{ 0.507267f, 0.609156f, -0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987900f, -0.155200f, 0.000000f }	},
	{	{ 0.507267f, 0.609156f, 0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987900f, -0.155200f, 0.000000f }	},
	{	{ 0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987900f, -0.155200f, 0.000000f }	},
	{	{ 0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987900f, -0.155200f, 0.000000f }	},
	{	{ 0.507267f, 0.609156f, 0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, 0.987900f }	},
	{	{ -0.507267f, 0.609156f, 0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, 0.987900f }	},
	{	{ -0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, 0.987900f }	},
	{	{ 0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.155200f, 0.987900f }	},
	{	{ -0.507267f, 0.609156f, 0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.987900f, -0.155200f, 0.000000f }	},
	{	{ -0.507267f, 0.609156f, -0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.987900f, -0.155200f, 0.000000f }	},
	{	{ -0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.987900f, -0.155200f, 0.000000f }	},
	{	{ -0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.987900f, -0.155200f, 0.000000f }	},
	{	{ -0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, 0.204900f }	},
	{	{ 0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, 0.204900f }	},
	{	{ 0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, 0.204900f }	},
	{	{ -0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, 0.204900f }	},
	{	{ 0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, -0.204900f }	},
	{	{ -0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, -0.204900f }	},
	{	{ -0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, -0.204900f }	},
	{	{ 0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.978800f, -0.204900f }	},
	{	{ -0.507267f, 0.609156f, 0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.507267f, 0.609156f, 0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.507267f, 0.609156f, -0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.507267f, 0.609156f, -0.507267f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.117114f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.204900f, -0.978800f, 0.000000f }	},
	{	{ 0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.204900f, -0.978800f, 0.000000f }	},
	{	{ 0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.204900f, -0.978800f, 0.000000f }	},
	{	{ 0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.204900f, -0.978800f, 0.000000f }	},
	{	{ -0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, -0.755400f }	},
	{	{ 0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, -0.755400f }	},
	{	{ 0.351107f, -0.007653f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, -0.755400f }	},
	{	{ -0.351107f, -0.007653f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, -0.755400f }	},
	{	{ 0.413995f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, 0.755400f }	},
	{	{ -0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, 0.755400f }	},
	{	{ -0.351107f, -0.007653f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, 0.755400f }	},
	{	{ 0.351107f, -0.007653f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.655200f, 0.755400f }	},
	{	{ -0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, -0.655200f, 0.000000f }	},
	{	{ -0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, -0.655200f, 0.000000f }	},
	{	{ -0.351107f, -0.007653f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, -0.655200f, 0.000000f }	},
	{	{ -0.351107f, -0.007653f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.064849f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.117114f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.482870f, 0.453838f, -0.482870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.204900f, -0.978800f, 0.000000f }	},
	{	{ -0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.204900f, -0.978800f, 0.000000f }	},
	{	{ -0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.204900f, -0.978800f, 0.000000f }	},
	{	{ -0.482870f, 0.453839f, 0.482869f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.204900f, -0.978800f, 0.000000f }	},
	{	{ -0.413995f, 0.117114f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.064849f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.117114f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.064849f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.413995f, 0.064849f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, -0.655200f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.351107f, -0.007653f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, -0.007653f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.351107f, -0.007653f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.439417f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.374085f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.374085f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.439417f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
};
#define _ModularColumn_top_vertices_
#endif
#ifndef _ModularColumn_top_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int ModularColumn_top_indices[276] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 16, 18,
	 20, 21, 22,
	 23, 20, 22,
	 24, 23, 22,
	 25, 24, 22,
	 26, 27, 28,
	 29, 26, 28,
	 30, 31, 32,
	 33, 30, 32,
	 34, 35, 36,
	 37, 34, 36,
	 38, 39, 40,
	 41, 38, 40,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 48,
	 49, 46, 48,
	 50, 51, 52,
	 53, 50, 52,
	 54, 55, 56,
	 57, 54, 56,
	 58, 59, 60,
	 61, 58, 60,
	 62, 63, 64,
	 65, 62, 64,
	 66, 67, 68,
	 69, 66, 68,
	 70, 71, 72,
	 73, 70, 72,
	 74, 75, 76,
	 77, 74, 76,
	 78, 79, 80,
	 81, 78, 80,
	 82, 83, 84,
	 85, 82, 84,
	 86, 87, 88,
	 89, 86, 88,
	 90, 91, 92,
	 93, 90, 92,
	 94, 95, 96,
	 97, 94, 96,
	 98, 99, 100,
	 101, 98, 100,
	 102, 103, 104,
	 105, 102, 104,
	 106, 107, 108,
	 109, 106, 108,
	 110, 111, 112,
	 113, 110, 112,
	 114, 115, 116,
	 117, 114, 116,
	 118, 119, 120,
	 121, 118, 120,
	 122, 123, 124,
	 125, 122, 124,
	 126, 127, 128,
	 129, 126, 128,
	 130, 131, 132,
	 133, 130, 132,
	 134, 135, 136,
	 137, 134, 136,
	 138, 139, 140,
	 141, 138, 140,
	 142, 143, 144,
	 145, 142, 144,
	 146, 147, 148,
	 149, 146, 148,
	 150, 151, 152,
	 153, 150, 152,
	 154, 155, 156,
	 157, 154, 156,
	 64, 158, 159,
	 65, 64, 159,
	 160, 65, 159,
	 161, 160, 159,
	 162, 163, 164,
	 165, 162, 164,
	 166, 167, 168,
	 169, 166, 168,
	 170, 171, 172,
	 173, 170, 172,
	 174, 175, 176,
	 177, 174, 176,
};
#define _ModularColumn_top_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _ModularColumn_top_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL ModularColumn_top_materials[2] =
{
	{
		{{ 0.287072f, 0.287072f, 0.287072f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.510617f, 0.510617f, 0.510617f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"RockLight",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _ModularColumn_top_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _ModularColumn_top_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int ModularColumn_top_batches[2][2] =
{
	{ 126, 0 },
	{ 150, 126 },
};
#define _ModularColumn_top_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _ModularColumn_top_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH ModularColumn_top_meshes[2] =
{
	{
		"default",
		126,
		0,
		0,
	},
	{
		"default",
		150,
		126,
		1,
	},
};
#define _ModularColumn_top_meshes_
#endif
